package fit

import (
	"math"
	"testing"
)

func TestFitHyper(t *testing.T) {
	x := []float64{1, 2, 3, 4, 5, 6, 7, 8, 9}
	y := []float64{0.01560084, 0.01392907, 0.01301867, 0.01249557, 0.01190561, 0.01131878, 0.01091478, 0.01073981, 0.01043296}
	par := FitHyper(x, y)
	expected := []float64{62.352885, 4.122212}
	for i := 0; i < len(par); i++ {
		if math.Abs(par[i]-expected[i]) > 1e-5 {
			t.Errorf("%d, Expect %f, got %f\n", i, expected[i], par[i])
		}
	}
}

func TestFitExp(t *testing.T) {
	y := []float64{0.015600839314894, 0.0139290656045694, 0.0130186686714599, 0.0124955670819063, 0.0119056080624362, 0.0113187792329688, 0.0109147762820121, 0.0107398089318678, 0.010432957597562, 0.0100915976444594, 0.0101028969376478, 0.00968861059257028, 0.00939696310330572, 0.00904486836995573, 0.00918940665148421, 0.00888282990065732, 0.00849316272929227, 0.00844501339865543, 0.00836104103989298, 0.00823574060655616, 0.00792995458492625, 0.00796526487551047, 0.00775305172810075, 0.00759204144237381, 0.00757748323895926, 0.00757997755056544, 0.00721357657665209, 0.00698312317012617, 0.00698183294399716, 0.00707912023540834, 0.00707893994056963, 0.00684181652384852, 0.0067521424093343, 0.00662698538759604, 0.00670548605966183, 0.00647274631920478, 0.0064794036339043, 0.00623868180220306, 0.00627187358059813, 0.00627595640111926, 0.00606325569397629, 0.0061133601920929, 0.00608667412361224, 0.00596040223987118, 0.00586620841656913, 0.00579315159638459, 0.00577705304225463, 0.00597741816754824, 0.0056056291878547, 0.00558441429775262, 0.00559889212690385, 0.00571161600721793, 0.00571499111470105, 0.00553250163924005, 0.00543618864564993, 0.00544722224678508, 0.00552527801126439, 0.00546836253953338, 0.00529653087115126, 0.0053315111995904, 0.00516602055844801, 0.00532591200236894, 0.00543883472963676, 0.00518701374378691, 0.00518233896950736, 0.00527440647384635, 0.00519530759917457, 0.00511943244038621, 0.00533370878837805, 0.00507488501562784, 0.00517446227536103, 0.00511892958567164, 0.00510386658161176, 0.00509795323764871, 0.00486702780322293, 0.00511271440811747, 0.00487071548027738, 0.00495468112710487, 0.00491275268465846, 0.00491355660989787, 0.00487137398756576, 0.00487963908344826, 0.00488185817339244, 0.00493089954847724, 0.00488281065577188, 0.00479928800948313, 0.00491826671499934, 0.00489942157084919, 0.00482745917943409, 0.00482468870375351, 0.00488845507626486, 0.00494458498992408, 0.00486259753846262, 0.00490944865123425, 0.00483462327191793, 0.00487115409857744, 0.00475464713115493, 0.00495289322141842, 0.004792018029891, 0.0048023983161196}
	x := []float64{}
	for i := 0; i < len(y); i++ {
		x = append(x, float64(i+1))
	}
	par := FitExp(x, y)
	expected := []float64{64.426574, 162.115936, 43.732383}
	for i := 0; i < len(par); i++ {
		if math.Abs(par[i]-expected[i]) > 1e-5 {
			t.Errorf("%d, Expect %f, got %f\n", i, expected[i], par[i])
		}
	}
}
